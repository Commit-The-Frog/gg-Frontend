name: Deploy Level42

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Build
        env:
          CI: false
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
          REACT_APP_LOGIN_URL: ${{ secrets.REACT_APP_LOGIN_URL }}
          REACT_APP_GOOGLE_ANALYTICS_ID: ${{ secrets.REACT_APP_GOOGLE_ANALYTICS_ID }}
          REACT_APP_PANEL_URL: ${{ secrets.REACT_APP_PANEL_URL }}
          REACT_APP_PANEL_API_URL: ${{ secrets.REACT_APP_PANEL_API_URL }}
          REACT_APP_RESERVATION_TICK_RANGE: ${{ secrets.REACT_APP_RESERVATION_TICK_RANGE }}
          REACT_APP_RESERVATION_TICK_TEST_RANGE: ${{ secrets.REACT_APP_RESERVATION_TICK_TEST_RANGE }}
          REACT_APP_RESERVATION_TICK_BLOCK_RANGE: ${{ secrets.REACT_APP_RESERVATION_TICK_BLOCK_RANGE }}
          REACT_APP_RESERVATION_TEST_MSG: ${{ secrets.REACT_APP_RESERVATION_TEST_MSG }}
          REACT_APP_RESERVATION_BLOCK_MSG: ${{ secrets.REACT_APP_RESERVATION_BLOCK_MSG }}
          GENERATE_SOURCEMAP: false
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload Files to S3
        run: aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }}

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

      - name: Notify Discord on failure
        uses: sarisia/actions-status-discord@v1
        if: ${{ failure() }}
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          status: ${{ job.status }}
          content: "[main] 배포 실패"
          color: 0xff0000
          username: GitHub Actions
          avatar_url: 'https://avatars.githubusercontent.com/u/44036562'

      - name: Notify Discord on success
        uses: sarisia/actions-status-discord@v1
        if: ${{ success() }}
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          status: ${{ job.status }}
          content: "[main] 배포 성공"
          color: 0x00ff00
          username: GitHub Actions
          avatar_url: 'https://avatars.githubusercontent.com/u/44036562'
